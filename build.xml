<project name="jing" default="all" basedir=".">

<property name="sdkjava.dir" value="c:\Program Files\Microsoft SDK for Java 4.0"/>

<target name="all" depends="jar, exegen, test, validate"/>

<target name="init">
  <mkdir dir="build"/>
  <property file="src/com/thaiopensource/relaxng/util/resources/Version.properties"/>
</target>

<target name="compile-grammar" depends="init">
 <mkdir dir="build/src/com/thaiopensource/relaxng/parse/nonxml"/>
 <javacc target="src/com/thaiopensource/relaxng/parse/nonxml/NonXmlSyntax.jj"
         outputdirectory="build/src/com/thaiopensource/relaxng/parse/nonxml"
         javacchome="lib"
         />
 <delete quiet="true">
  <fileset dir="build/src/com/thaiopensource/relaxng/parse/nonxml"
           includes="UCode_CharStream.java"/>
 </delete>
</target>

<target name="compile" depends="compile-grammar">
  <mkdir dir="build/classes"/>
  <javac srcdir="src:build/src" destdir="build/classes"/>
</target>

<target name="jar" depends="compile">

  <echo file="build/jing-manifest.txt">Manifest-Version: 1.0
Main-Class: com/thaiopensource/relaxng/util/Driver
</echo>

  <jar jarfile="build/jing.jar" manifest="build/jing-manifest.txt">
    <fileset dir="build/classes"/>
    <fileset dir="src" includes="**/*.properties,META-INF/services/*"/>
  </jar>

  <taskdef name="jing" classname="com.thaiopensource.relaxng.util.JingTask">
    <classpath>
      <pathelement location="build/jing.jar"/>
    </classpath>
  </taskdef>

</target>

<target name="exegen" depends="compile,check-exe,crimson-files,regex-files"
        unless="exe-ok">
  <exec dir="." executable="${sdkjava.dir}\bin\jexegen" failonerror="yes">
    <arg value="/main:com.thaiopensource.relaxng.util.ExegenDriver"/>
    <arg value="/nologo"/>
    <arg value="/out:build\jing.exe"/>
    <arg value="/r"/>
    <arg value="/base:src"/>
    <arg value="*.properties"/>
    <arg value="META-INF\services\*"/>
    <arg value="/base:build\classes"/>
    <arg value="*.class"/>
    <arg value="/base:build\crimson-files"/>
    <arg value="*.*"/>
    <arg value="/base:build\regex-files"/>
    <arg value="*.*"/>
  </exec>
</target>

<target name="check-exe">
  <uptodate property="exe-ok" targetfile="build/jing.exe">
    <srcfiles dir="build/classes" includes="**/*.class"/>
    <srcfiles dir="src" includes="**/*.properties"/>
  </uptodate>
</target>

<target name="crimson-files" depends="check-crimson-files" unless="crimson-files-ok">
  <mkdir dir="build/crimson-files"/>
  <unzip src="lib/crimson.jar" dest="build/crimson-files"/>
  <delete dir="build/crimson-files/org/w3c"/>
  <delete dir="build/crimson-files/org/apache/crimson/tree"/>
  <delete file="build/crimson-files/META-INF/services/javax.xml.parsers.DocumentBuilderFactory"/>
  <delete file="build/crimson-files/javax/xml/parsers/DocumentBuilder.class"/>
  <delete file="build/crimson-files/javax/xml/parsers/DocumentBuilderFactory.class"/>
  <delete dir="build/crimson-files/org/apache/crimson/jaxp/DocumentBuilderImpl.class"/>
  <delete dir="build/crimson-files/org/apache/crimson/jaxp/DocumentBuilderFactoryImpl.class"/>
</target>

<target name="check-crimson-files">
  <available property="crimson-files-ok"
             file="build/crimson-files/org/apache/crimson/parser/XMLReaderImpl.class"/>
</target>

<target name="regex-files" depends="check-regex-files" unless="regex-files-ok">
  <mkdir dir="build/regex-files"/>
  <unzip src="lib/regex2.jar" dest="build/regex-files"/>
  <delete dir="build/regex-files/META-INF"/>
</target>

<target name="check-regex-files">
  <available property="regex-files-ok"
             file="build/regex-files/org/apache/xerces/impl/xpath/regex/RegularExpression.class"/>
</target>

<target name="validate" depends="jar">
  <jing rngfile="xhtml/xhtml-basic.rng">
    <fileset dir="doc" includes="*.html,jing-win32-bin/*.html,jing--bin/*.html"/>
    <fileset dir="datatype-sample" includes="index.html"/>
    <fileset dir="test" includes="index.html"/>
  </jing>
  <jing rngfile="xhtml/xhtml.rng">
    <fileset dir="doc/nonxml" includes="*.html"/>
  </jing>
  <jing rngfile="eg/relaxng.rng">
    <fileset dir="eg" includes="*.rng"/>
    <fileset dir="xhtml" includes="**/*.rng"/>
  </jing>
  <jing rngfile="doc/nonxml/relaxng.rnx" nonxmlsyntax="true">
    <fileset dir="eg" includes="relaxng.rng"/>
  </jing>
  <jing rngfile="eg/xslt.rng">
    <fileset dir="convert" includes="*.xsl"/>
  </jing>
  <jing rngfile="doc/design.rng">
    <fileset dir="doc" includes="design.xml"/>
  </jing>
</target>

<target name="split" depends="init, check-split" unless="split-not-required">
  <jing rngfile="eg/testSuite.rng">
    <fileset dir="test" includes="spectest.xml"/>
  </jing>
  <delete dir="build/test"/>
  <mkdir dir="build/test"/>
  <style basedir="test" destdir="build/test" includes="spectest.xml" extension=".stamp" style="test/split.xsl">
    <param name="dir" expression="build/test"/>
  </style>
</target>

<target name="check-split">
  <uptodate property="split-not-required" targetfile="build/test/spectest.stamp">
    <srcfiles dir="test" includes="spectest.xml"/>
  </uptodate>
</target>

<target name="test" depends="jar,split">
  <java classname="com.thaiopensource.relaxng.util.TestDriver" fork="yes" failonerror="yes">
    <arg value="build/test/out.log"/>
    <arg value="build/test"/>
    <classpath>
      <pathelement location="build/jing.jar"/>
      <pathelement path="${java.class.path}"/>
    </classpath>
  </java>
</target>

<target name="javadoc" depends="init">
  <mkdir dir="build/api"/>
  <mkdir dir="build/api/datatype"/>
  <javadoc sourcepath="src" destdir="build/api/datatype"
    doctitle="RELAX NG Datatype API" windowtitle="RELAX NG Datatype API"
    packagenames="org.relaxng.datatype,org.relaxng.datatype.helpers"/>
  <mkdir dir="build/api/jing"/>
  <javadoc sourcepath="src" destdir="build/api/jing"
    doctitle="Jing API" windowtitle="Jing API"
    packagenames="com.thaiopensource.relaxng,com.thaiopensource.relaxng.util">
    <link offline="true" href="../datatype" packagelistLoc="build/api/datatype"/>
    <link offline="true" href="http://www.saxproject.org/apidoc" packagelistLoc="extapidoc/sax"/>
    <link offline="true" href="http://java.sun.com/products/jdk/1.3/docs/api" packagelistLoc="extapidoc/jdk/1.3"/>
    <link offline="true" href="http://java.sun.com/xml/jaxp/dist/1.1/docs/api" packagelistLoc="extapidoc/jaxp/1.1"/>
  </javadoc>
</target>

<target name="doccheck" depends="init">
  <mkdir dir="build/doccheck"/>
  <javadoc sourcepath="src"
           destdir="build/doccheck"
           packagenames="com.thaiopensource.relaxng,com.thaiopensource.relaxng.util"
           doclet="com.sun.tools.doclets.doccheck.DocCheck"
           docletpath="lib/doccheck.jar"/>
</target>

<target name="datatype-sample" depends="jar">
  <ant dir="datatype-sample">
    <property name="build.dir" value="../build/datatype-sample"/>
    <property name="jing.jar" value="../build/jing.jar"/>
  </ant>
</target>

<target name="doc">
  <style basedir="doc" destdir="build" includes="derivative.xml"
         style="doc/derivative.xsl"/>
  <style basedir="doc" destdir="build" includes="design.xml"
         style="doc/design.xsl"/>
</target>

<target name="trang-jar" depends="compile">
  <ant dir="trang" target="jar">
    <property name="build.dir" value="../build/trang"/>
    <property name="dist.dir" value="../build"/>
    <property name="jing.classes" value="../build/classes"/>
    <property file="trang/src/com/thaiopensource/relaxng/output/resources/Version.properties"/>
  </ant>
</target>

<target name="trang-test" depends="jar">
  <ant dir="trang" target="test">
    <property name="build.dir" value="../build/trang"/>
    <property name="dist.dir" value="../build"/>
    <property name="jing.classes" value="../build/classes"/>
    <property file="trang/src/com/thaiopensource/relaxng/output/resources/Version.properties"/>
  </ant>
</target>

<target name="trang-dist" depends="jar">
  <ant dir="trang" target="dist">
    <property name="build.dir" value="../build/trang"/>
    <property name="dist.dir" value="../build"/>
    <property name="jing.classes" value="../build/classes"/>
    <property file="trang/src/com/thaiopensource/relaxng/output/resources/Version.properties"/>
  </ant>
</target>

<target name="dist" depends="jar,exegen,validate,test,javadoc,datatype-sample,doc,trang-dist">
  <zip zipfile="build/jing-src.zip">
    <fileset dir="src" includes="**/*.java,**/*.properties,META-INF/services/*"/>
  </zip>
  <zip zipfile="build/xhtml-rng.zip">
    <fileset dir="." includes="xhtml/**/*.rng,xhtml/index.html"/>
  </zip>
  <copy todir="build">
    <fileset dir="." includes="copying.txt"/>
    <fileset dir="doc" includes="*.html"/>
    <fileset dir="convert" includes="from-relax.xsl,simplify.xsl"/>
    <fileset dir="eg" includes="relaxng.rng,xslt.rng,relaxCore.rng,relaxCoreDatatypes.rng"/>
  </copy>
  <mkdir dir="build/nonxml"/>
  <copy todir="build/nonxml">
    <fileset dir="doc/nonxml" includes="*.html"/>
  </copy>
  <copy file="doc/nonxml/relaxng.rnx"
        tofile="build/nonxml/relaxng.rnx.txt"/>
  <replace file="build/jing.html" token="@VERSION@" value="${version}"/>
  <mkdir dir="build/jing-win32-bin"/>
  <copy todir="build/jing-win32-bin">
    <fileset dir="doc/jing-win32-bin" includes="readme.html"/>
  </copy>
  <replace file="build/jing-win32-bin/readme.html" token="@VERSION@" value="${version}"/>
  <zip zipfile="build/jing-win32-bin.zip">
    <fileset dir="build/jing-win32-bin" includes="readme.html"/>
    <fileset dir="doc/jing-win32-bin" includes="apache-license.txt"/>
    <fileset dir="build" includes="jing.exe,copying.txt"/>
  </zip>
  <mkdir dir="build/jing-bin"/>
  <copy todir="build/jing-bin">
    <fileset dir="doc/jing-bin" includes="readme.html"/>
  </copy>
  <replace file="build/jing-bin/readme.html" token="@VERSION@" value="${version}"/>
  <zip zipfile="build/jing-bin.zip">
    <fileset dir="build/jing-bin" includes="readme.html"/>
    <fileset dir="build" includes="jing.jar,copying.txt"/>
  </zip>
  <unzip src="build/xhtml-rng.zip" dest="build"/>
  <move file="build/xhtml-rng.zip" todir="build/xhtml"/>
  <zip zipfile="build/datatype-sample.zip">
    <fileset dir="datatype-sample"/>
    <zipfileset dir="build/api/datatype" includes="**" prefix="api"/>
    <fileset dir="build/datatype-sample" includes="datatype-sample.jar"/>
  </zip>
  <zip zipfile="build/jing-api.zip">
    <fileset dir="build" includes="api/**"/>
  </zip>
  <zip zipfile="build/testSuite.zip">
    <fileset dir="test"/>
    <fileset dir="eg" includes="testSuite.rng"/>
  </zip>
  <tar tarfile="build/relaxng.tar" basedir="build"
    includes="*.zip,copying.txt,*.html,*.xsl,*.rng,xhtml/**,api/**,nonxml/**"/>
  <gzip zipfile="build/relaxng.tar.gz" src="build/relaxng.tar"/>
</target>

<target name="clean">
  <delete dir="build"/>
</target>

</project>
