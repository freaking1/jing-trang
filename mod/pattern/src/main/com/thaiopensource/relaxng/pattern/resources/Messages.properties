# Properties file specifying messages
illegal_href_attribute=illegal \"href\" attribute
ns_attribute_ignored=\"ns\" attribute ignored
reference_to_undefined=reference to undefined pattern \"{0}\"
missing_start_element=missing \"start\" element
recursive_reference=bad recursive reference to pattern \"{0}\"
recursive_include=recursive inclusion of URL \"{0}\"
duplicate_define=multiple definitions of \"{0}\" without \"combine\" attribute
duplicate_start=multiple definitions of start without \"combine\" attribute
conflict_combine_define=conflicting values of \"combine\" attribute for definition of \"{0}\"
conflict_combine_start=conflicting values of \"combine\" attribute for definition of start
missing_start_replacement=\"start\" in \"include\" does not override anything
missing_define_replacement=definition of \"{0}\" in \"include\" does not override anything
interleave_string=interleave of \"string\" or \"data\" element
group_string=group of \"string\" or \"data\" element
one_or_more_string=repeat of \"string\" or \"data\" element
unrecognized_datatype=datatype \"{1}\" from library \"{0}\" not recognized
unsupported_datatype_detail=datatype \"{1}\" from library \"{0}\" not supported: {2}
unrecognized_datatype_library=datatype library \"{0}\" not recognized
unrecognized_builtin_datatype=no such builtin datatype \"{0}\": must be \"string\" or \"token\"
invalid_value=\"{0}\" is not a valid value of the datatype
parent_ref_outside_grammar=reference to non-existent parent grammar
ref_outside_grammar=reference to non-existent grammar
expected_one_name_class=found \"{0}\" element but expected no further content
builtin_param=builtin datatypes do not have any parameters
invalid_param_display=invalid parameter:\n{0}
invalid_param_detail_display=invalid parameter: {0}:\n{1}
display_param={0}>>>>{1}
invalid_param_detail=invalid parameter: {0}
invalid_param=invalid parameter
invalid_params_detail=invalid parameters: {0}
invalid_params=invalid parameters
datatype_requires_parameter=datatype cannot be used without parameters
datatype_requires_parameter_detail=datatype cannot be used without parameters: {0}

attribute_contains_attribute=\"attribute\" contains \"attribute\"
attribute_contains_element=\"attribute\" contains \"element\"
data_except_contains_attribute=\"except\" in \"data\" contains \"attribute\"
data_except_contains_element=\"except\" in \"data\" contains \"element\"
data_except_contains_empty=\"except\" in \"data\" contains \"empty\"
data_except_contains_group=\"except\" in \"data\" contains \"group\"
data_except_contains_interleave=\"except\" in \"data\" contains \"interleave\"
data_except_contains_list=\"except\" in \"data\" contains \"list\"
data_except_contains_one_or_more=\"except\" in \"data\" contains \"oneOrMore\"
data_except_contains_text=\"except\" in \"data\" contains \"text\"
list_contains_attribute=\"list\" contains \"attribute\"
list_contains_element=\"list\" contains \"element\"
list_contains_list=\"list\" contains \"list\"
list_contains_text=\"list\" contains \"text\"
one_or_more_contains_group_contains_attribute=\"oneOrMore\" contains \"group\" contains \"attribute\"
one_or_more_contains_interleave_contains_attribute=\"oneOrMore\" contains \"interleave\" contains \"attribute\"
start_contains_attribute=\"start\" contains \"attribute\"
start_contains_data=\"start\" contains \"data\"
start_contains_empty=\"start\" contains \"empty\"
start_contains_group=\"start\" contains \"group\"
start_contains_interleave=\"start\" contains \"interleave\"
start_contains_list=\"start\" contains \"list\"
start_contains_one_or_more=\"start\" contains \"oneOrMore\"
start_contains_text=\"start\" contains \"text\"
start_contains_value=\"start\" contains \"value\"
duplicate_attribute=duplicate attribute
duplicate_attribute_name=duplicate attribute {0}
duplicate_attribute_ns=attributes from namespace \"{0}\" can occur more than once
interleave_element_overlap=overlapping element names in operands of \"interleave\"
interleave_element_overlap_name=the element {0} can occur in more than one operand of \"interleave\"
interleave_element_overlap_ns=elements from namespace \"{0}\" can occur in more than one operand of \"interleave\"
list_contains_interleave=\"list\" contains \"interleave\"
interleave_text_overlap=both operands of \"interleave\" contain \"text\"
open_name_class_not_repeated=attribute using \"nsName\" or \"anyName\" must be in \"oneOrMore\"
xmlns_uri_attribute=attribute must not have namespace URI \"http://www.w3.org/2000/xmlns\"
xmlns_attribute=attribute must not be named \"xmlns\"

# Validation errors
unknown_element=element {0} not allowed anywhere{1}
unexpected_element_required_element_missing=element {0} not allowed yet; missing required element {1}
unexpected_element_required_elements_missing=element {0} not allowed yet; missing required elements {1}
element_not_allowed_yet=element {0} not allowed yet{1}
out_of_context_element=element {0} not allowed here{1}
no_attributes_allowed=found attribute {0}, but no attributes allowed here
invalid_attribute_name=attribute {0} not allowed here{1}
invalid_attribute_value=value of attribute {0} is invalid{1}
required_attributes_missing_expected=element {0} missing one or more required attributes{1}
required_attribute_missing=element {0} missing required attribute {1}
required_attributes_missing=element {0} missing required attributes {1}
incomplete_element_required_elements_missing_expected=element {0} incomplete{1}
incomplete_element_required_element_missing=element {0} incomplete; missing required element {1}
incomplete_element_required_elements_missing=element {0} incomplete; missing required elements {1}
text_not_allowed=text not allowed here{0}
document_incomplete=document incompletely matched
invalid_element_value=character content of element {0} invalid{1}
blank_not_allowed=empty content for element {0} not allowed{1}
schema_allows_nothing=schema does not allow anything: it is equivalent to <notAllowed/>

# ID correctness errors
id_element_name_class=an \"element\" pattern containing an \"attribute\" pattern with a non-null ID-type must have a name class that contains only \"choice\" and \"name\" elements
id_attribute_name_class=an \"attribute\" pattern with a non-null ID-type must have a name class that is a single name
id_parent=a \"data\" or \"value\" pattern with non-null ID-type must occur as the child of an \"attribute\" pattern
id_type_conflict=conflicting ID-types for attribute {1} of element {0}

# ID soundness errors
id_no_tokens=value of attribute of type ID contained no tokens
id_multiple_tokens=value of attribute of type ID contained multiple tokens
idref_no_tokens=value of attribute of type IDREF contained no tokens
idref_multiple_tokens=value of attribute of type IDREF contained multiple tokens
idrefs_no_tokens=value of attribute of type IDREFS contained no tokens
missing_id=IDREF \"{0}\" without matching ID
duplicate_id=ID \"{0}\" has already been defined
first_id=first occurrence of ID \"{0}\"

# Fragments
name_absent_namespace=\"{0}\"
name_with_namespace=\"{1}\" from namespace \"{0}\"
qname=\"{0}\"
qnames_nsdecls={0} (with {1})
or_list_pair={0} or {1}
or_list_many_first={0}
or_list_many_middle={0}, {1}
or_list_many_last={0} or {1}
and_list_pair={0} and {1}
and_list_many_first={0}
and_list_many_middle={0}, {1}
and_list_many_last={0} and {1}
expected_end_element=; expected the element end-tag
expected_text_or_element=; expected text or element {0}
expected_data_or_element=; expected data or element {0}
expected_element=; expected element {0}
expected_text_or_element_or_other_ns=; expected text or element {0} or an element from another namespace
expected_data_or_element_or_other_ns=; expected data, element {0} or an element from another namespace
expected_element_or_other_ns=; expected element {0} or an element from another namespace
expected_attribute=; expected attribute {0}
expected_attribute_or_other_ns=; expected attribute {0} or an attribute from another namespace
expected_text=; expected text
data_failures=; {0}
token_failures=; token {0} invalid; {1}
missing_token=; missing token; {0}
expected_data=; expected data
require_values=must be equal to {0}
require_qnames=must be a QName equal to {0}
require_datatype=must be a valid instance of datatype {0}
