<testSuite>
<testCase>
<compact>
<correct>
foo = xsd:token
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:simpleType name="foo">
    <xs:restriction base="xs:token"/>
  </xs:simpleType>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = xsd:token { minLength = "2" maxLength = "17" }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:simpleType name="foo">
    <xs:restriction base="xs:token">
      <xs:minLength value="2"/>
      <xs:maxLength value="17"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = "stuff"
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:simpleType name="foo">
    <xs:restriction base="xs:token">
      <xs:enumeration value="stuff"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = xsd:integer "1" | xsd:integer "2"
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:simpleType name="foo">
    <xs:restriction base="xs:integer">
      <xs:enumeration value="1"/>
      <xs:enumeration value="2"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = xsd:integer "1" | xsd:double "1.0"
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:simpleType name="foo">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:integer">
          <xs:enumeration value="1"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="xs:double">
          <xs:enumeration value="1.0"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = list { xsd:int* }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:simpleType name="foo">
    <xs:list>
      <xs:simpleType>
        <xs:restriction base="xs:int"/>
      </xs:simpleType>
    </xs:list>
  </xs:simpleType>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = list { xsd:int+ }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:simpleType name="foo">
    <xs:restriction>
      <xs:simpleType>
        <xs:list>
          <xs:simpleType>
            <xs:restriction base="xs:int"/>
          </xs:simpleType>
        </xs:list>
      </xs:simpleType>
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = list { xsd:int, xsd:int+ }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:simpleType name="foo">
    <xs:restriction>
      <xs:simpleType>
        <xs:list>
          <xs:simpleType>
            <xs:union>
              <xs:simpleType>
                <xs:restriction base="xs:int"/>
              </xs:simpleType>
              <xs:simpleType>
                <xs:restriction base="xs:int"/>
              </xs:simpleType>
            </xs:union>
          </xs:simpleType>
        </xs:list>
      </xs:simpleType>
      <xs:minLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = list { empty }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:simpleType name="foo">
    <xs:restriction base="xs:token">
      <xs:length value="0"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = list { notAllowed } | xsd:int
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:simpleType name="foo">
    <xs:restriction base="xs:int"/>
  </xs:simpleType>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = empty, xsd:int
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:simpleType name="foo">
    <xs:restriction base="xs:int"/>
  </xs:simpleType>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = xsd:int*
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:simpleType name="foo">
    <xs:restriction base="xs:int"/>
  </xs:simpleType>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = element foo { empty }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:group name="foo">
    <xs:sequence>
      <xs:element name="foo">
        <xs:complexType/>
      </xs:element>
    </xs:sequence>
  </xs:group>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = element foo { attribute bar { xsd:double }, (xsd:int | xsd:boolean) }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:group name="foo">
    <xs:sequence>
      <xs:element name="foo">
        <xs:complexType>
          <xs:simpleContent>
            <xs:restriction base="xs:anyType">
              <xs:simpleType>
                <xs:union>
                  <xs:simpleType>
                    <xs:restriction base="xs:int"/>
                  </xs:simpleType>
                  <xs:simpleType>
                    <xs:restriction base="xs:boolean"/>
                  </xs:simpleType>
                </xs:union>
              </xs:simpleType>
              <xs:attribute name="bar" use="required">
                <xs:simpleType>
                  <xs:restriction base="xs:double"/>
                </xs:simpleType>
              </xs:attribute>
            </xs:restriction>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
foo = element foo { bar }
bar = xsd:int | xsd:boolean
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:group name="foo">
    <xs:sequence>
      <xs:element name="foo">
        <xs:complexType>
          <xs:simpleContent>
            <xs:restriction base="xs:anyType">
              <xs:simpleType>
                <xs:restriction base="bar"/>
              </xs:simpleType>
            </xs:restriction>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:simpleType name="bar">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:int"/>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="xs:boolean"/>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
bar = element bar { foo }
foo = attribute foo { xsd:double } | element foo { xsd:double }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:group name="bar">
    <xs:sequence>
      <xs:element name="bar">
        <xs:complexType>
          <xs:group ref="foo"/>
          <xs:attributeGroup ref="foo"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:group name="foo">
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element name="foo">
          <xs:complexType>
            <xs:simpleContent>
              <xs:restriction base="xs:anyType">
                <xs:simpleType>
                  <xs:restriction base="xs:double"/>
                </xs:simpleType>
              </xs:restriction>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="foo">
    <xs:attribute name="foo" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:double"/>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
start = foo
foo = element foo { empty }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified" version="1.0">
<xs:element name="foo">
  <xs:complexType/>
</xs:element>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
start = root
root = foo|bar
foo = element foo { empty }
bar = element bar { empty }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified" version="1.0">
<xs:group name="root">
  <xs:choice>
    <xs:element ref="foo"/>
    <xs:element ref="bar"/>
  </xs:choice>
</xs:group>
<xs:element name="foo">
  <xs:complexType/>
</xs:element>
<xs:element name="bar">
  <xs:complexType/>
</xs:element>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
 element foo { empty } | element bar { empty }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified" version="1.0">
<xs:element name="foo">
  <xs:complexType/>
</xs:element>
<xs:element name="bar">
  <xs:complexType/>
</xs:element>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<resource name="bar.rnc">
bar = element bar { empty }
baz = element baz { empty }
</resource>
<correct>
foo = element foo { bar | baz }
include "bar.rnc"
</correct>
</compact>
<xsd>
<resource name="bar.xsd">
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:group name="bar">
    <xs:sequence>
      <xs:element name="bar">
        <xs:complexType/>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:group name="baz">
    <xs:sequence>
      <xs:element name="baz">
        <xs:complexType/>
      </xs:element>
    </xs:sequence>
  </xs:group>
</xs:schema>
</resource>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0">
  <xs:include schemaLocation="bar.xsd"/>
  <xs:group name="foo">
    <xs:sequence>
      <xs:element name="foo">
        <xs:complexType>
          <xs:choice>
            <xs:group ref="bar"/>
            <xs:group ref="baz"/>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
namespace eg = "http://www.example.com"
element eg:foo { empty }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified" version="1.0"
 targetNamespace="http://www.example.com" xmlns:eg="http://www.example.com">
  <xs:element name="foo">
    <xs:complexType/>
  </xs:element>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
default namespace = "http://www.example.com"
element foo { empty }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified" version="1.0"
 targetNamespace="http://www.example.com" xmlns:ns1="http://www.example.com">
  <xs:element name="foo">
    <xs:complexType/>
  </xs:element>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<resource name="foo.rnc">
start = element foo { empty }
</resource>
<correct>
default namespace = "http://www.example.com"

include "foo.rnc"
</correct>
</compact>
<xsd>
<resource name="foo.xsd">
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com" xmlns:ns1="http://www.example.com">
  <xs:element name="foo">
    <xs:complexType/>
  </xs:element>
</xs:schema>
</resource>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com" xmlns:ns1="http://www.example.com">
  <xs:include schemaLocation="foo.xsd"/>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
namespace e1 = "http://www.example.com/1"
namespace e2 = "http://www.example.com/2"

element e1:x {
  element e2:y {
    empty
  }
}

</correct>
</compact>
<xsd>
<resource name="e2.xsd">
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com/2" xmlns:e2="http://www.example.com/2" xmlns:e1="http://www.example.com/1">
  <xs:import namespace="http://www.example.com/1" schemaLocation="c.xsd"/>
  <xs:group name="anon0">
    <xs:sequence>
      <xs:element name="y">
        <xs:complexType/>
      </xs:element>
    </xs:sequence>
  </xs:group>
</xs:schema>
</resource>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com/1" xmlns:e2="http://www.example.com/2" xmlns:e1="http://www.example.com/1">
  <xs:import namespace="http://www.example.com/2" schemaLocation="e2.xsd"/>
  <xs:element name="x">
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="e2:anon0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>

</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
namespace e1 = "http://www.example.com/1"

element e1:x {
  element y {
    empty
  }
}
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com/1" xmlns:e1="http://www.example.com/1">
  <xs:element name="x">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="y" form="unqualified">
          <xs:complexType/>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
namespace e1 = "http://www.example.com/1"

element e1:x {
  element y {
    element e1:z {
      empty
    }
  }
}

</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com/1" xmlns:e1="http://www.example.com/1">
  <xs:element name="x">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="y" form="unqualified">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="z">
                <xs:complexType/>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
namespace e1 = "http://www.example.com/1"
namespace e2 = "http://www.example.com/2"

element e1:x {
  element e2:y {
    element e1:z {
      empty
    }
  }
}
</correct>
</compact>
<xsd>
<resource name="e2.xsd">
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com/2" xmlns:e2="http://www.example.com/2" xmlns:e1="http://www.example.com/1">
  <xs:import namespace="http://www.example.com/1" schemaLocation="c.xsd"/>
  <xs:group name="anon0">
    <xs:sequence>
      <xs:element name="y">
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="e1:anon0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
</xs:schema>
</resource>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com/1" xmlns:e2="http://www.example.com/2" xmlns:e1="http://www.example.com/1">
  <xs:import namespace="http://www.example.com/2" schemaLocation="e2.xsd"/>
  <xs:element name="x">
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="e2:anon0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:group name="anon0">
    <xs:sequence>
      <xs:element name="z">
        <xs:complexType/>
      </xs:element>
    </xs:sequence>
  </xs:group>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
namespace e1 = "http://www.example.com/1"
namespace e2 = "http://www.example.com/2"

element e1:x { empty } | element e2:y { empty }
</correct>
</compact>
<xsd>
<resource name="e1.xsd">
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com/1" xmlns:e2="http://www.example.com/2" xmlns:e1="http://www.example.com/1">
  <xs:import namespace="http://www.example.com/2" schemaLocation="c.xsd"/>
  <xs:element name="x">
    <xs:complexType/>
  </xs:element>
</xs:schema>
</resource>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com/2" xmlns:e2="http://www.example.com/2" xmlns:e1="http://www.example.com/1">
  <xs:import namespace="http://www.example.com/1" schemaLocation="e1.xsd"/>
  <xs:element name="y">
    <xs:complexType/>
  </xs:element>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
namespace e1 = "http://www.example.com/1"
namespace e2 = "http://www.example.com/2"

start = x | y
x = element e1:x { y? }
y = element e2:y { x? }
</correct>
</compact>
<xsd>
<resource name="e1.xsd">
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com/1" xmlns:e2="http://www.example.com/2" xmlns:e1="http://www.example.com/1">
  <xs:import namespace="http://www.example.com/2" schemaLocation="c.xsd"/>
  <xs:element name="x">
    <xs:complexType>
      <xs:sequence minOccurs="0">
        <xs:element ref="e2:y"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
</resource>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com/2" xmlns:e2="http://www.example.com/2" xmlns:e1="http://www.example.com/1">
  <xs:import namespace="http://www.example.com/1" schemaLocation="e1.xsd"/>
  <xs:element name="y">
    <xs:complexType>
      <xs:sequence minOccurs="0">
        <xs:element ref="e1:x"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
namespace e1 = "http://www.example.com/1"

element e1:x { attribute e1:a { text } }
</correct>
</compact>
<xsd>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com/1" xmlns:e1="http://www.example.com/1">
  <xs:element name="x">
    <xs:complexType>
      <xs:attribute name="a" form="qualified" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
namespace e1 = "http://www.example.com/1"

element x { empty } | element e1:y { empty }
</correct>
</compact>
<xsd>
<resource name="local.xsd">
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" xmlns:e1="http://www.example.com/1">
  <xs:import namespace="http://www.example.com/1" schemaLocation="c.xsd"/>
  <xs:element name="x">
    <xs:complexType/>
  </xs:element>
</xs:schema>
</resource>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com/1" xmlns:e1="http://www.example.com/1">
  <xs:import schemaLocation="local.xsd"/>
  <xs:element name="y">
    <xs:complexType/>
  </xs:element>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<resource name="example.rnc">
namespace eg = "http://www.example.com"

start = element eg:y { x }
</resource>
<correct>
x = element x { empty }

include "example.rnc"
</correct>
</compact>
<xsd>
<resource name="example.xsd">
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com" xmlns:eg="http://www.example.com">
  <xs:import schemaLocation="c.xsd"/>
  <xs:element name="y">
    <xs:complexType>
      <xs:group ref="x"/>
    </xs:complexType>
  </xs:element>
</xs:schema>
</resource>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" xmlns:eg="http://www.example.com">
  <xs:import namespace="http://www.example.com" schemaLocation="example.xsd"/>
  <xs:group name="x">
    <xs:sequence>
      <xs:element name="x">
        <xs:complexType/>
      </xs:element>
    </xs:sequence>
  </xs:group>
</xs:schema>
</correct>
</xsd>
</testCase>
<testCase>
<compact>
<correct>
namespace eg = "http://www.example.com"

element x { attribute eg:y { text } }
</correct>
</compact>
<xsd>
<resource name="eg.xsd">
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" targetNamespace="http://www.example.com" xmlns:eg="http://www.example.com">
  <xs:import schemaLocation="c.xsd"/>
  <xs:attributeGroup name="anon0">
    <xs:attribute name="y" form="qualified" use="required"/>
  </xs:attributeGroup>
</xs:schema>
</resource>
<correct>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0" xmlns:eg="http://www.example.com">
  <xs:import namespace="http://www.example.com" schemaLocation="eg.xsd"/>
  <xs:element name="x">
    <xs:complexType>
      <xs:attributeGroup ref="eg:anon0"/>
    </xs:complexType>
  </xs:element>
</xs:schema>
</correct>
</xsd>
</testCase>
<!--
<testCase>
<compact>
<correct>
</correct>
</compact>
<xsd>
<correct>
</correct>
</xsd>
</testCase>
-->
</testSuite>
