Use global element declarations
- when only one element of particular name
- when multiple elements, but only one occurs as the sole content of a define
- when there's something we want to use in a subsitution group

Avoid duplicate attributes.

Deal with <ref> to attributes inside optional.

Name classes
- choice
- attribute wildcards
- element wildcards

Nested grammars
- check and give an error
- handle some cases
- expand when necessary

Allow attribute names with empty namespace or target namespace

Allow local elements with empty namespace

Namespaces
- check for single namespace
- allow multiple namespaces but not mixed in a file
- split files based on namespace

Include overrides
- Check and give error
- Handle overrides

combine attributes
- combine="choice" on <start>
- others

externalRef
- detect and give error
- handle
- remember problem with parentRef in externalRef

Check for ref loops

Check for undefined refs

Check for RNG contextual constraints

Approximate <interleave>

NOTATION datatypes

Multiple pattern parameters

Use complexType in place of group: <define> that contains both
attributes or text and elements and sometimes referenced as a
complexType, then define as complexType.

Deal with xsi attributes.

Make use of element substitution groups.

Deal with comments

Deal with annotations

Deal with a:documentation

